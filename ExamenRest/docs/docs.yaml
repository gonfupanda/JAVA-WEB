openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/alumnos:
    get:
      tags:
      - alumno-entity-controller
      description: get-alumno
      operationId: getCollectionResource-alumno-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelAlumno'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelAlumno'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - alumno-entity-controller
      description: create-alumno
      operationId: postCollectionResource-alumno-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlumnoRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAlumno'
  /api/alumnos/{id}:
    get:
      tags:
      - alumno-entity-controller
      description: get-alumno
      operationId: getItemResource-alumno-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAlumno'
        "404":
          description: Not Found
    put:
      tags:
      - alumno-entity-controller
      description: update-alumno
      operationId: putItemResource-alumno-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlumnoRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAlumno'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAlumno'
        "204":
          description: No Content
    delete:
      tags:
      - alumno-entity-controller
      description: delete-alumno
      operationId: deleteItemResource-alumno-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - alumno-entity-controller
      description: patch-alumno
      operationId: patchItemResource-alumno-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlumnoRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAlumno'
        "204":
          description: No Content
  /api/alumnos/{id}/imparticiones:
    get:
      tags:
      - alumno-property-reference-controller
      description: get-imparticion-by-alumno-Id
      operationId: followPropertyReference-alumno-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelImparticion'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - alumno-property-reference-controller
      description: update-imparticion-by-alumno-Id
      operationId: createPropertyReference-alumno-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelImparticion'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelImparticion'
        "204":
          description: No Content
    delete:
      tags:
      - alumno-property-reference-controller
      description: delete-imparticion-by-alumno-Id
      operationId: deletePropertyReference-alumno-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - alumno-property-reference-controller
      description: patch-imparticion-by-alumno-Id
      operationId: createPropertyReference-alumno-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelImparticion'
        "204":
          description: No Content
  /api/alumnos/{id}/imparticiones/{propertyId}:
    get:
      tags:
      - alumno-property-reference-controller
      description: get-imparticion-by-alumno-Id
      operationId: followPropertyReference-alumno-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelImparticion'
        "404":
          description: Not Found
    delete:
      tags:
      - alumno-property-reference-controller
      description: delete-imparticion-by-alumno-Id
      operationId: deletePropertyReferenceId-alumno-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/alumnos/{id}/resenas:
    get:
      tags:
      - alumno-property-reference-controller
      description: get-resena-by-alumno-Id
      operationId: followPropertyReference-alumno-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelResena'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - alumno-property-reference-controller
      description: update-resena-by-alumno-Id
      operationId: createPropertyReference-alumno-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelResena'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelResena'
        "204":
          description: No Content
    delete:
      tags:
      - alumno-property-reference-controller
      description: delete-resena-by-alumno-Id
      operationId: deletePropertyReference-alumno-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - alumno-property-reference-controller
      description: patch-resena-by-alumno-Id
      operationId: createPropertyReference-alumno-patch_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelResena'
        "204":
          description: No Content
  /api/alumnos/{id}/resenas/{propertyId}:
    get:
      tags:
      - alumno-property-reference-controller
      description: get-resena-by-alumno-Id
      operationId: followPropertyReference-alumno-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelResena'
        "404":
          description: Not Found
    delete:
      tags:
      - alumno-property-reference-controller
      description: delete-resena-by-alumno-Id
      operationId: deletePropertyReferenceId-alumno-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/clientes:
    get:
      tags:
      - cliente-entity-controller
      description: get-cliente
      operationId: getCollectionResource-cliente-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCliente'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCliente'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - cliente-entity-controller
      description: create-cliente
      operationId: postCollectionResource-cliente-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCliente'
  /api/clientes/{id}:
    get:
      tags:
      - cliente-entity-controller
      description: get-cliente
      operationId: getItemResource-cliente-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCliente'
        "404":
          description: Not Found
    put:
      tags:
      - cliente-entity-controller
      description: update-cliente
      operationId: putItemResource-cliente-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCliente'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCliente'
        "204":
          description: No Content
    delete:
      tags:
      - cliente-entity-controller
      description: delete-cliente
      operationId: deleteItemResource-cliente-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - cliente-entity-controller
      description: patch-cliente
      operationId: patchItemResource-cliente-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCliente'
        "204":
          description: No Content
  /api/clientes/{id}/cursosCli:
    get:
      tags:
      - cliente-property-reference-controller
      description: get-curso-by-cliente-Id
      operationId: followPropertyReference-cliente-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCurso'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - cliente-property-reference-controller
      description: update-curso-by-cliente-Id
      operationId: createPropertyReference-cliente-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCurso'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCurso'
        "204":
          description: No Content
    delete:
      tags:
      - cliente-property-reference-controller
      description: delete-curso-by-cliente-Id
      operationId: deletePropertyReference-cliente-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - cliente-property-reference-controller
      description: patch-curso-by-cliente-Id
      operationId: createPropertyReference-cliente-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCurso'
        "204":
          description: No Content
  /api/clientes/{id}/cursosCli/{propertyId}:
    get:
      tags:
      - cliente-property-reference-controller
      description: get-curso-by-cliente-Id
      operationId: followPropertyReference-cliente-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCurso'
        "404":
          description: Not Found
    delete:
      tags:
      - cliente-property-reference-controller
      description: delete-curso-by-cliente-Id
      operationId: deletePropertyReferenceId-cliente-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cursos:
    get:
      tags:
      - curso-entity-controller
      description: get-curso
      operationId: getCollectionResource-curso-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCurso'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCurso'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - curso-entity-controller
      description: create-curso
      operationId: postCollectionResource-curso-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CursoRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
  /api/cursos/{id}:
    get:
      tags:
      - curso-entity-controller
      description: get-curso
      operationId: getItemResource-curso-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
        "404":
          description: Not Found
    put:
      tags:
      - curso-entity-controller
      description: update-curso
      operationId: putItemResource-curso-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CursoRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
        "204":
          description: No Content
    delete:
      tags:
      - curso-entity-controller
      description: delete-curso
      operationId: deleteItemResource-curso-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - curso-entity-controller
      description: patch-curso
      operationId: patchItemResource-curso-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CursoRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
        "204":
          description: No Content
  /api/cursos/{id}/cursoCli:
    get:
      tags:
      - curso-property-reference-controller
      description: get-cliente-by-curso-Id
      operationId: followPropertyReference-curso-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCliente'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - curso-property-reference-controller
      description: update-cliente-by-curso-Id
      operationId: createPropertyReference-curso-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCliente'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCliente'
        "204":
          description: No Content
    delete:
      tags:
      - curso-property-reference-controller
      description: delete-cliente-by-curso-Id
      operationId: deletePropertyReference-curso-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - curso-property-reference-controller
      description: patch-cliente-by-curso-Id
      operationId: createPropertyReference-curso-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCliente'
        "204":
          description: No Content
  /api/cursos/{id}/cursoCli/{propertyId}:
    get:
      tags:
      - curso-property-reference-controller
      description: get-cliente-by-curso-Id
      operationId: followPropertyReference-curso-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCliente'
        "404":
          description: Not Found
    delete:
      tags:
      - curso-property-reference-controller
      description: delete-cliente-by-curso-Id
      operationId: deletePropertyReferenceId-curso-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cursos/{id}/cursoProf:
    get:
      tags:
      - curso-property-reference-controller
      description: get-profesor-by-curso-Id
      operationId: followPropertyReference-curso-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - curso-property-reference-controller
      description: update-profesor-by-curso-Id
      operationId: createPropertyReference-curso-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
        "204":
          description: No Content
    delete:
      tags:
      - curso-property-reference-controller
      description: delete-profesor-by-curso-Id
      operationId: deletePropertyReference-curso-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - curso-property-reference-controller
      description: patch-profesor-by-curso-Id
      operationId: createPropertyReference-curso-patch_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
        "204":
          description: No Content
  /api/cursos/{id}/cursoProf/{propertyId}:
    get:
      tags:
      - curso-property-reference-controller
      description: get-profesor-by-curso-Id
      operationId: followPropertyReference-curso-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
        "404":
          description: Not Found
    delete:
      tags:
      - curso-property-reference-controller
      description: delete-profesor-by-curso-Id
      operationId: deletePropertyReferenceId-curso-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cursos/{id}/imparticiones:
    get:
      tags:
      - curso-property-reference-controller
      description: get-imparticion-by-curso-Id
      operationId: followPropertyReference-curso-get_3_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelImparticion'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - curso-property-reference-controller
      description: update-imparticion-by-curso-Id
      operationId: createPropertyReference-curso-put_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelImparticion'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelImparticion'
        "204":
          description: No Content
    delete:
      tags:
      - curso-property-reference-controller
      description: delete-imparticion-by-curso-Id
      operationId: deletePropertyReference-curso-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - curso-property-reference-controller
      description: patch-imparticion-by-curso-Id
      operationId: createPropertyReference-curso-patch_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelImparticion'
        "204":
          description: No Content
  /api/cursos/{id}/imparticiones/{propertyId}:
    get:
      tags:
      - curso-property-reference-controller
      description: get-imparticion-by-curso-Id
      operationId: followPropertyReference-curso-get_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelImparticion'
        "404":
          description: Not Found
    delete:
      tags:
      - curso-property-reference-controller
      description: delete-imparticion-by-curso-Id
      operationId: deletePropertyReferenceId-curso-delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cursos/{id}/resenas:
    get:
      tags:
      - curso-property-reference-controller
      description: get-resena-by-curso-Id
      operationId: followPropertyReference-curso-get_4_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelResena'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - curso-property-reference-controller
      description: update-resena-by-curso-Id
      operationId: createPropertyReference-curso-put_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelResena'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelResena'
        "204":
          description: No Content
    delete:
      tags:
      - curso-property-reference-controller
      description: delete-resena-by-curso-Id
      operationId: deletePropertyReference-curso-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - curso-property-reference-controller
      description: patch-resena-by-curso-Id
      operationId: createPropertyReference-curso-patch_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelResena'
        "204":
          description: No Content
  /api/cursos/{id}/resenas/{propertyId}:
    get:
      tags:
      - curso-property-reference-controller
      description: get-resena-by-curso-Id
      operationId: followPropertyReference-curso-get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelResena'
        "404":
          description: Not Found
    delete:
      tags:
      - curso-property-reference-controller
      description: delete-resena-by-curso-Id
      operationId: deletePropertyReferenceId-curso-delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/imparticiones:
    get:
      tags:
      - imparticion-entity-controller
      description: get-imparticion
      operationId: getCollectionResource-imparticion-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelImparticion'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelImparticion'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - imparticion-entity-controller
      description: create-imparticion
      operationId: postCollectionResource-imparticion-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImparticionRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelImparticion'
  /api/imparticiones/{id}:
    get:
      tags:
      - imparticion-entity-controller
      description: get-imparticion
      operationId: getItemResource-imparticion-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelImparticion'
        "404":
          description: Not Found
    put:
      tags:
      - imparticion-entity-controller
      description: update-imparticion
      operationId: putItemResource-imparticion-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImparticionRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelImparticion'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelImparticion'
        "204":
          description: No Content
    delete:
      tags:
      - imparticion-entity-controller
      description: delete-imparticion
      operationId: deleteItemResource-imparticion-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - imparticion-entity-controller
      description: patch-imparticion
      operationId: patchItemResource-imparticion-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImparticionRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelImparticion'
        "204":
          description: No Content
  /api/imparticiones/{id}/alumnoImp:
    get:
      tags:
      - imparticion-property-reference-controller
      description: get-alumno-by-imparticion-Id
      operationId: followPropertyReference-imparticion-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAlumno'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - imparticion-property-reference-controller
      description: update-alumno-by-imparticion-Id
      operationId: createPropertyReference-imparticion-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAlumno'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAlumno'
        "204":
          description: No Content
    delete:
      tags:
      - imparticion-property-reference-controller
      description: delete-alumno-by-imparticion-Id
      operationId: deletePropertyReference-imparticion-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - imparticion-property-reference-controller
      description: patch-alumno-by-imparticion-Id
      operationId: createPropertyReference-imparticion-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAlumno'
        "204":
          description: No Content
  /api/imparticiones/{id}/alumnoImp/{propertyId}:
    get:
      tags:
      - imparticion-property-reference-controller
      description: get-alumno-by-imparticion-Id
      operationId: followPropertyReference-imparticion-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAlumno'
        "404":
          description: Not Found
    delete:
      tags:
      - imparticion-property-reference-controller
      description: delete-alumno-by-imparticion-Id
      operationId: deletePropertyReferenceId-imparticion-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/imparticiones/{id}/cursoImp:
    get:
      tags:
      - imparticion-property-reference-controller
      description: get-curso-by-imparticion-Id
      operationId: followPropertyReference-imparticion-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - imparticion-property-reference-controller
      description: update-curso-by-imparticion-Id
      operationId: createPropertyReference-imparticion-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
        "204":
          description: No Content
    delete:
      tags:
      - imparticion-property-reference-controller
      description: delete-curso-by-imparticion-Id
      operationId: deletePropertyReference-imparticion-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - imparticion-property-reference-controller
      description: patch-curso-by-imparticion-Id
      operationId: createPropertyReference-imparticion-patch_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
        "204":
          description: No Content
  /api/imparticiones/{id}/cursoImp/{propertyId}:
    get:
      tags:
      - imparticion-property-reference-controller
      description: get-curso-by-imparticion-Id
      operationId: followPropertyReference-imparticion-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
        "404":
          description: Not Found
    delete:
      tags:
      - imparticion-property-reference-controller
      description: delete-curso-by-imparticion-Id
      operationId: deletePropertyReferenceId-imparticion-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/profesores:
    get:
      tags:
      - profesor-entity-controller
      description: get-profesor
      operationId: getCollectionResource-profesor-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelProfesor'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelProfesor'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - profesor-entity-controller
      description: create-profesor
      operationId: postCollectionResource-profesor-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfesorRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
  /api/profesores/{id}:
    get:
      tags:
      - profesor-entity-controller
      description: get-profesor
      operationId: getItemResource-profesor-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
        "404":
          description: Not Found
    put:
      tags:
      - profesor-entity-controller
      description: update-profesor
      operationId: putItemResource-profesor-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfesorRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
        "204":
          description: No Content
    delete:
      tags:
      - profesor-entity-controller
      description: delete-profesor
      operationId: deleteItemResource-profesor-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - profesor-entity-controller
      description: patch-profesor
      operationId: patchItemResource-profesor-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfesorRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelProfesor'
        "204":
          description: No Content
  /api/profesores/{id}/cursoProf:
    get:
      tags:
      - profesor-property-reference-controller
      description: get-curso-by-profesor-Id
      operationId: followPropertyReference-profesor-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCurso'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - profesor-property-reference-controller
      description: update-curso-by-profesor-Id
      operationId: createPropertyReference-profesor-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCurso'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCurso'
        "204":
          description: No Content
    delete:
      tags:
      - profesor-property-reference-controller
      description: delete-curso-by-profesor-Id
      operationId: deletePropertyReference-profesor-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - profesor-property-reference-controller
      description: patch-curso-by-profesor-Id
      operationId: createPropertyReference-profesor-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCurso'
        "204":
          description: No Content
  /api/profesores/{id}/cursoProf/{propertyId}:
    get:
      tags:
      - profesor-property-reference-controller
      description: get-curso-by-profesor-Id
      operationId: followPropertyReference-profesor-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCurso'
        "404":
          description: Not Found
    delete:
      tags:
      - profesor-property-reference-controller
      description: delete-curso-by-profesor-Id
      operationId: deletePropertyReferenceId-profesor-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/profile:
    get:
      tags:
      - profile-controller
      operationId: listAllFormsOfMetadata_1
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RepresentationModelObject'
  /api/profile/alumnos:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /api/profile/clientes:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /api/profile/cursos:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_3
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /api/profile/imparticiones:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_4
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /api/profile/profesores:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_5
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /api/profile/resenas:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_6
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /api/resenas:
    get:
      tags:
      - resena-entity-controller
      description: get-resena
      operationId: getCollectionResource-resena-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelResena'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelResena'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - resena-entity-controller
      description: create-resena
      operationId: postCollectionResource-resena-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResenaRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelResena'
  /api/resenas/{id}:
    get:
      tags:
      - resena-entity-controller
      description: get-resena
      operationId: getItemResource-resena-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelResena'
        "404":
          description: Not Found
    put:
      tags:
      - resena-entity-controller
      description: update-resena
      operationId: putItemResource-resena-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResenaRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelResena'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelResena'
        "204":
          description: No Content
    delete:
      tags:
      - resena-entity-controller
      description: delete-resena
      operationId: deleteItemResource-resena-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - resena-entity-controller
      description: patch-resena
      operationId: patchItemResource-resena-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResenaRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelResena'
        "204":
          description: No Content
  /api/resenas/{id}/alumno:
    get:
      tags:
      - resena-property-reference-controller
      description: get-alumno-by-resena-Id
      operationId: followPropertyReference-resena-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAlumno'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - resena-property-reference-controller
      description: update-alumno-by-resena-Id
      operationId: createPropertyReference-resena-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAlumno'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAlumno'
        "204":
          description: No Content
    delete:
      tags:
      - resena-property-reference-controller
      description: delete-alumno-by-resena-Id
      operationId: deletePropertyReference-resena-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - resena-property-reference-controller
      description: patch-alumno-by-resena-Id
      operationId: createPropertyReference-resena-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAlumno'
        "204":
          description: No Content
  /api/resenas/{id}/alumno/{propertyId}:
    get:
      tags:
      - resena-property-reference-controller
      description: get-alumno-by-resena-Id
      operationId: followPropertyReference-resena-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAlumno'
        "404":
          description: Not Found
    delete:
      tags:
      - resena-property-reference-controller
      description: delete-alumno-by-resena-Id
      operationId: deletePropertyReferenceId-resena-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/resenas/{id}/cursoRes:
    get:
      tags:
      - resena-property-reference-controller
      description: get-curso-by-resena-Id
      operationId: followPropertyReference-resena-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - resena-property-reference-controller
      description: update-curso-by-resena-Id
      operationId: createPropertyReference-resena-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
        "204":
          description: No Content
    delete:
      tags:
      - resena-property-reference-controller
      description: delete-curso-by-resena-Id
      operationId: deletePropertyReference-resena-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - resena-property-reference-controller
      description: patch-curso-by-resena-Id
      operationId: createPropertyReference-resena-patch_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
        "204":
          description: No Content
  /api/resenas/{id}/cursoRes/{propertyId}:
    get:
      tags:
      - resena-property-reference-controller
      description: get-curso-by-resena-Id
      operationId: followPropertyReference-resena-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCurso'
        "404":
          description: Not Found
    delete:
      tags:
      - resena-property-reference-controller
      description: delete-curso-by-resena-Id
      operationId: deletePropertyReferenceId-resena-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
components:
  schemas:
    AbstractJsonSchemaPropertyObject:
      type: object
      properties:
        title:
          type: string
        readOnly:
          type: boolean
    Item:
      type: object
      properties:
        type:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
    JsonSchema:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
        definitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Item'
        type:
          type: string
        $schema:
          type: string
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    RepresentationModelObject:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelResena:
      type: object
      properties:
        texto:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
    PagedModelEntityModelResena:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            resenas:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelResena'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelCurso:
      type: object
      properties:
        nombre:
          type: string
        identificador:
          type: string
        finicio:
          type: string
          format: date-time
        ffin:
          type: string
          format: date-time
        nhoras:
          type: integer
          format: int32
        temario:
          type: string
        activo:
          type: integer
          format: int32
        precio:
          type: number
          format: double
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelObject:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            objects:
              type: array
              items:
                type: object
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelAlumno:
      type: object
      properties:
        nombre:
          type: string
        apellidos:
          type: string
        fnacimiento:
          type: string
          format: date-time
        direccion:
          type: string
        poblacion:
          type: string
        codigopostal:
          type: integer
          format: int32
        telefono:
          type: integer
          format: int32
        email:
          type: string
        dni:
          type: string
        nhermanos:
          type: integer
          format: int32
        activo:
          type: integer
          format: int32
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelImparticion:
      type: object
      properties:
        fmatriculacion:
          type: string
          format: date-time
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelImparticion:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            imparticiones:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelImparticion'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelCliente:
      type: object
      properties:
        nombre:
          type: string
        email:
          type: string
        poblacion:
          type: string
        codigopostal:
          type: integer
          format: int32
        telefono:
          type: integer
          format: int32
        direccion:
          type: string
        activo:
          type: integer
          format: int32
        identificador:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelCliente:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            clientes:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCliente'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelCurso:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            cursos:
              type: array
              items:
                $ref: '#/components/schemas/CursoResponse'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelAlumno:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            alumnos:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelAlumno'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelResena:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            resenas:
              type: array
              items:
                $ref: '#/components/schemas/ResenaResponse'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelImparticion:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            imparticiones:
              type: array
              items:
                $ref: '#/components/schemas/ImparticionResponse'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelProfesor:
      type: object
      properties:
        nombre:
          type: string
        apellidos:
          type: string
        fnacimiento:
          type: string
          format: date-time
        dni:
          type: string
        direccion:
          type: string
        poblacion:
          type: string
        codigopostal:
          type: integer
          format: int32
        telefono:
          type: integer
          format: int32
        email:
          type: string
        activo:
          type: integer
          format: int32
        nss:
          type: integer
          format: int64
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelProfesor:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            profesores:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelProfesor'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelCurso:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            cursos:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCurso'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    AlumnoRequestBody:
      type: object
      properties:
        codigo:
          type: integer
          format: int64
        nombre:
          type: string
        apellidos:
          type: string
        fnacimiento:
          type: string
          format: date-time
        direccion:
          type: string
        poblacion:
          type: string
        codigopostal:
          type: integer
          format: int32
        telefono:
          type: integer
          format: int32
        email:
          type: string
        dni:
          type: string
        nhermanos:
          type: integer
          format: int32
        activo:
          type: integer
          format: int32
        imparticiones:
          type: array
          items:
            type: string
        resenas:
          type: array
          items:
            type: string
    ClienteRequestBody:
      type: object
      properties:
        codigo:
          type: integer
          format: int64
        nombre:
          type: string
        email:
          type: string
        poblacion:
          type: string
        codigopostal:
          type: integer
          format: int32
        telefono:
          type: integer
          format: int32
        direccion:
          type: string
        activo:
          type: integer
          format: int32
        identificador:
          type: string
        cursosCli:
          type: array
          items:
            type: string
    CursoRequestBody:
      type: object
      properties:
        codigo:
          type: integer
          format: int64
        nombre:
          type: string
        identificador:
          type: string
        finicio:
          type: string
          format: date-time
        ffin:
          type: string
          format: date-time
        nhoras:
          type: integer
          format: int32
        temario:
          type: string
        activo:
          type: integer
          format: int32
        precio:
          type: number
          format: double
        imparticiones:
          type: array
          items:
            type: string
        resenas:
          type: array
          items:
            type: string
        cursoCli:
          type: string
        cursoProf:
          type: string
    ImparticionRequestBody:
      type: object
      properties:
        codigo:
          type: integer
          format: int64
        fmatriculacion:
          type: string
          format: date-time
        cursoImp:
          type: string
        alumnoImp:
          type: string
    ProfesorRequestBody:
      type: object
      properties:
        codigo:
          type: integer
          format: int64
        nombre:
          type: string
        apellidos:
          type: string
        fnacimiento:
          type: string
          format: date-time
        dni:
          type: string
        direccion:
          type: string
        poblacion:
          type: string
        codigopostal:
          type: integer
          format: int32
        telefono:
          type: integer
          format: int32
        email:
          type: string
        activo:
          type: integer
          format: int32
        nss:
          type: integer
          format: int64
        cursoProf:
          type: array
          items:
            type: string
    ResenaRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        texto:
          type: string
        cursoRes:
          type: string
        alumno:
          type: string
    CursoResponse:
      type: object
      properties:
        nombre:
          type: string
        identificador:
          type: string
        finicio:
          type: string
          format: date-time
        ffin:
          type: string
          format: date-time
        nhoras:
          type: integer
          format: int32
        temario:
          type: string
        activo:
          type: integer
          format: int32
        precio:
          type: number
          format: double
    ImparticionResponse:
      type: object
      properties:
        fmatriculacion:
          type: string
          format: date-time
    ResenaResponse:
      type: object
      properties:
        texto:
          type: string
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
