openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/autores:
    get:
      tags:
      - autor-entity-controller
      description: get-autor
      operationId: getCollectionResource-autor-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelAutor'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelAutor'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - autor-entity-controller
      description: create-autor
      operationId: postCollectionResource-autor-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutorRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAutor'
  /api/autores/search/findByNombre:
    get:
      tags:
      - autor-search-controller
      operationId: executeSearch-autor-get
      parameters:
      - name: nombre
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAutor'
        "404":
          description: Not Found
  /api/autores/{id}:
    get:
      tags:
      - autor-entity-controller
      description: get-autor
      operationId: getItemResource-autor-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAutor'
        "404":
          description: Not Found
    put:
      tags:
      - autor-entity-controller
      description: update-autor
      operationId: putItemResource-autor-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutorRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAutor'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAutor'
        "204":
          description: No Content
    delete:
      tags:
      - autor-entity-controller
      description: delete-autor
      operationId: deleteItemResource-autor-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - autor-entity-controller
      description: patch-autor
      operationId: patchItemResource-autor-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutorRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAutor'
        "204":
          description: No Content
  /api/autores/{id}/libros:
    get:
      tags:
      - autor-property-reference-controller
      description: get-libro-by-autor-Id
      operationId: followPropertyReference-autor-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelLibro'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - autor-property-reference-controller
      description: update-libro-by-autor-Id
      operationId: createPropertyReference-autor-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelLibro'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelLibro'
        "204":
          description: No Content
    delete:
      tags:
      - autor-property-reference-controller
      description: delete-libro-by-autor-Id
      operationId: deletePropertyReference-autor-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - autor-property-reference-controller
      description: patch-libro-by-autor-Id
      operationId: createPropertyReference-autor-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelLibro'
        "204":
          description: No Content
  /api/autores/{id}/libros/{propertyId}:
    get:
      tags:
      - autor-property-reference-controller
      description: get-libro-by-autor-Id
      operationId: followPropertyReference-autor-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelLibro'
        "404":
          description: Not Found
    delete:
      tags:
      - autor-property-reference-controller
      description: delete-libro-by-autor-Id
      operationId: deletePropertyReferenceId-autor-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/libros:
    get:
      tags:
      - libro-entity-controller
      description: get-libro
      operationId: getCollectionResource-libro-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLibro'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLibro'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - libro-entity-controller
      description: create-libro
      operationId: postCollectionResource-libro-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibroRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLibro'
  /api/libros/search/findByNombre:
    get:
      tags:
      - libro-search-controller
      operationId: executeSearch-libro-get
      parameters:
      - name: nombre
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLibro'
        "404":
          description: Not Found
  /api/libros/{id}:
    get:
      tags:
      - libro-entity-controller
      description: get-libro
      operationId: getItemResource-libro-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLibro'
        "404":
          description: Not Found
    put:
      tags:
      - libro-entity-controller
      description: update-libro
      operationId: putItemResource-libro-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibroRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLibro'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLibro'
        "204":
          description: No Content
    delete:
      tags:
      - libro-entity-controller
      description: delete-libro
      operationId: deleteItemResource-libro-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - libro-entity-controller
      description: patch-libro
      operationId: patchItemResource-libro-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibroRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLibro'
        "204":
          description: No Content
  /api/libros/{id}/autor:
    get:
      tags:
      - libro-property-reference-controller
      description: get-autor-by-libro-Id
      operationId: followPropertyReference-libro-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAutor'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - libro-property-reference-controller
      description: update-autor-by-libro-Id
      operationId: createPropertyReference-libro-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAutor'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAutor'
        "204":
          description: No Content
    delete:
      tags:
      - libro-property-reference-controller
      description: delete-autor-by-libro-Id
      operationId: deletePropertyReference-libro-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - libro-property-reference-controller
      description: patch-autor-by-libro-Id
      operationId: createPropertyReference-libro-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAutor'
        "204":
          description: No Content
  /api/libros/{id}/autor/{propertyId}:
    get:
      tags:
      - libro-property-reference-controller
      description: get-autor-by-libro-Id
      operationId: followPropertyReference-libro-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelAutor'
        "404":
          description: Not Found
    delete:
      tags:
      - libro-property-reference-controller
      description: delete-autor-by-libro-Id
      operationId: deletePropertyReferenceId-libro-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/libros/{id}/resenas:
    get:
      tags:
      - libro-property-reference-controller
      description: get-resena-by-libro-Id
      operationId: followPropertyReference-libro-get_2_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelResena'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - libro-property-reference-controller
      description: update-resena-by-libro-Id
      operationId: createPropertyReference-libro-put_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelResena'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelResena'
        "204":
          description: No Content
    delete:
      tags:
      - libro-property-reference-controller
      description: delete-resena-by-libro-Id
      operationId: deletePropertyReference-libro-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - libro-property-reference-controller
      description: patch-resena-by-libro-Id
      operationId: createPropertyReference-libro-patch_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelResena'
        "204":
          description: No Content
  /api/libros/{id}/resenas/{propertyId}:
    get:
      tags:
      - libro-property-reference-controller
      description: get-resena-by-libro-Id
      operationId: followPropertyReference-libro-get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelResena'
        "404":
          description: Not Found
    delete:
      tags:
      - libro-property-reference-controller
      description: delete-resena-by-libro-Id
      operationId: deletePropertyReferenceId-libro-delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/profile:
    get:
      tags:
      - profile-controller
      operationId: listAllFormsOfMetadata_1
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RepresentationModelObject'
  /api/profile/autores:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /api/profile/libros:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /api/profile/resenas:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_3
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /api/resenas:
    get:
      tags:
      - resena-entity-controller
      description: get-resena
      operationId: getCollectionResource-resena-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelResena'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelResena'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - resena-entity-controller
      description: create-resena
      operationId: postCollectionResource-resena-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResenaRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelResena'
  /api/resenas/{id}:
    get:
      tags:
      - resena-entity-controller
      description: get-resena
      operationId: getItemResource-resena-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelResena'
        "404":
          description: Not Found
    put:
      tags:
      - resena-entity-controller
      description: update-resena
      operationId: putItemResource-resena-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResenaRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelResena'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelResena'
        "204":
          description: No Content
    delete:
      tags:
      - resena-entity-controller
      description: delete-resena
      operationId: deleteItemResource-resena-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - resena-entity-controller
      description: patch-resena
      operationId: patchItemResource-resena-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResenaRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelResena'
        "204":
          description: No Content
  /api/resenas/{id}/libro:
    get:
      tags:
      - resena-property-reference-controller
      description: get-libro-by-resena-Id
      operationId: followPropertyReference-resena-get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLibro'
            text/uri-list:
              schema:
                type: string
        "404":
          description: Not Found
    put:
      tags:
      - resena-property-reference-controller
      description: update-libro-by-resena-Id
      operationId: createPropertyReference-resena-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLibro'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLibro'
        "204":
          description: No Content
    delete:
      tags:
      - resena-property-reference-controller
      description: delete-libro-by-resena-Id
      operationId: deletePropertyReference-resena-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - resena-property-reference-controller
      description: patch-libro-by-resena-Id
      operationId: createPropertyReference-resena-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLibro'
        "204":
          description: No Content
  /api/resenas/{id}/libro/{propertyId}:
    get:
      tags:
      - resena-property-reference-controller
      description: get-libro-by-resena-Id
      operationId: followPropertyReference-resena-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLibro'
        "404":
          description: Not Found
    delete:
      tags:
      - resena-property-reference-controller
      description: delete-libro-by-resena-Id
      operationId: deletePropertyReferenceId-resena-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: propertyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
components:
  schemas:
    AbstractJsonSchemaPropertyObject:
      type: object
      properties:
        title:
          type: string
        readOnly:
          type: boolean
    Item:
      type: object
      properties:
        type:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
    JsonSchema:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
        definitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Item'
        type:
          type: string
        $schema:
          type: string
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    RepresentationModelObject:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelResena:
      type: object
      properties:
        texto:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
    PagedModelEntityModelResena:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            resenas:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelResena'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelLibro:
      type: object
      properties:
        nombre:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelObject:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            objects:
              type: array
              items:
                type: object
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelAutor:
      type: object
      properties:
        nombre:
          type: string
        apellidos:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelAutor:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            autores:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelAutor'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelLibro:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            libros:
              type: array
              items:
                $ref: '#/components/schemas/LibroResponse'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelLibro:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            libros:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelLibro'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelResena:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            resenas:
              type: array
              items:
                $ref: '#/components/schemas/ResenaResponse'
        _links:
          $ref: '#/components/schemas/Links'
    AutorRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nombre:
          type: string
        apellidos:
          type: string
        libros:
          type: array
          items:
            type: string
    LibroRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nombre:
          type: string
        autor:
          type: string
        resenas:
          type: array
          items:
            type: string
    ResenaRequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        texto:
          type: string
        libro:
          type: string
    LibroResponse:
      type: object
      properties:
        nombre:
          type: string
    ResenaResponse:
      type: object
      properties:
        texto:
          type: string
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
